name: Update Appcast
on:
  release:
    types: [published]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  update-appcast:
    # Only run for non-prerelease releases
    if: github.event.release.prerelease == false
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install NetSparkle Tools
      run: dotnet tool install --global NetSparkleUpdater.Tools.AppCastGenerator

    - name: Extract version from tag
      id: version
      run: |
        TAG_NAME="${{ github.event.release.tag_name }}"
        VERSION="${TAG_NAME#v}"  # Remove 'v' prefix if present
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "📦 Processing release version: $VERSION"

    - name: Download release asset
      run: |
        mkdir -p appcast
        cd appcast
        
        # Download the installer from the release
        ASSET_URL=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}" \
          | jq -r '.assets[] | select(.name | contains("WorldBuilderInstaller")) | .browser_download_url')
        
        if [ -z "$ASSET_URL" ]; then
          echo "❌ Could not find installer asset"
          exit 1
        fi
        
        echo "📥 Downloading installer from: $ASSET_URL"
        curl -L -o "WorldBuilderInstaller-${{ steps.version.outputs.version }}.exe" "$ASSET_URL"

    - name: Create changelog file
      run: |
        echo "${{ github.event.release.body }}" > "${{ steps.version.outputs.version }}.md"

    - name: Generate updated appcast
      run: |
        cd appcast
        
        # Download existing appcast if it exists
        curl -f -o appcast.xml https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/appcast.xml || true
        
        # Generate new appcast with stable channel
        netsparkle-generate-appcast \
          -b . \
          -f true \
          --os windows-x64 \
          -n WorldBuilder \
          --file-version "${{ steps.version.outputs.version }}" \
          --overwrite-old-items \
          --reparse-existing true \
          --human-readable true \
          --channel stable \
          --change-log-path ../ \
          --base-url "https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/"
        
        echo "✅ Updated appcast.xml:"
        cat appcast.xml
        
        # Clean up the installer file (we don't need to store it in Pages)
        rm WorldBuilderInstaller-${{ steps.version.outputs.version }}.exe
      shell: bash
      env:
        SPARKLE_PRIVATE_KEY: ${{ secrets.SPARKLE_PRIVATE_KEY }}
        SPARKLE_PUBLIC_KEY: ${{ secrets.SPARKLE_PUBLIC_KEY }}

    - name: Deploy appcast to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./appcast
        keep_files: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_message: 'Update appcast for release ${{ steps.version.outputs.version }}'

    - name: Summary
      run: |
        echo "## ✅ Appcast Updated Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Channel:** stable" >> $GITHUB_STEP_SUMMARY
        echo "**Appcast URL:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/appcast.xml" >> $GITHUB_STEP_SUMMARY
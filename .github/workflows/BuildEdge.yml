name: Build Edge
on:
  push:
    branches:
      - master
      - main
permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for GitVersion and changelog
    
    - name: Install makensis
      run: sudo apt update && sudo apt install -y nsis nsis-pluginapi
    
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '6.4.x'
    
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
      with:
        useConfigFile: true
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Setup NetSparkleUpdater
      run: |
        dotnet tool install --global NetSparkleUpdater.Tools.AppCastGenerator
        dotnet tool install --global NetSparkleUpdater.Tools
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build -r win-x64 --configuration Release --no-restore -p:Version=${{ steps.gitversion.outputs.semVer }}
    
    - name: Publish
      run: dotnet publish -r win-x64 --no-build -p:Version=${{ steps.gitversion.outputs.semVer }}
    
    - name: Build installer
      run: |
          makensis -DVERSION="${{ steps.gitversion.outputs.semVer }}" -DBUILDPATH="${{ github.workspace }}/WorldBuilder.Desktop/bin/Release/win-x64/publish/" "${{ github.workspace }}/Installer.nsi"
    
    - name: Generate NetSparkle Signature
      id: sign
      run: |
        $signature = netsparkle-dsa sign_file ./WorldBuilderInstaller-${{ steps.gitversion.outputs.semVer }}.exe "${{ secrets.SPARKLE_PRIVATE_KEY }}"
        echo "signature=$signature" >> $env:GITHUB_OUTPUT
      shell: pwsh
    
    - name: Generate Changelog
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v4
      with:
        configuration: ".github/changelog-config.json"
        toTag: ${{ github.sha }}
        commitMode: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Download existing appcast from GitHub Pages
      run: |
      shell: bash
    
    - name: Generate updated appcast
      run: |
        echo "${{ steps.changelog.outputs.changelog }}" > changelog.md
        mkdir -p appcast
        cp ./WorldBuilderInstaller-${{ steps.gitversion.outputs.semVer }}.exe appcast/
        cd appcast
        curl -f -o appcast.xml https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/appcast.xml
        echo "Downloaded existing appcast:"
        cat appcast.xml
        netsparkle-generate-appcast -b . -f true --os windows-x64 -n WorldBuilder --overwrite-old-items --reparse-existing true --human-readable true --channel edge --change-log-path ../changelog.md --base-url "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/releases/downloads/latest/"
        echo "Updated appcast.xml:"
        cat appcast.xml
        rm WorldBuilderInstaller-${{ steps.gitversion.outputs.semVer }}.exe
      shell: bash
      env:
        SPARKLE_PRIVATE_KEY: ${{ secrets.SPARKLE_PRIVATE_KEY }}
    
    - name: Delete existing 'latest' release
      run: |
        gh release delete latest --yes || true
        git push origin :refs/tags/latest || true
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create/Update Pre-release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        name: "Edge Build ${{ steps.gitversion.outputs.semVer }}"
        body: |
          ## 🚀 Edge Build ${{ steps.gitversion.outputs.semVer }}
          
          This is an automated pre-release build from the latest commit.
          
          ### 📋 Changelog
          ${{ steps.changelog.outputs.changelog }}
          
          ### ⚠️ Warning
          This is a preview build and may contain bugs or incomplete features.
        files: ./WorldBuilderInstaller-${{ steps.gitversion.outputs.semVer }}.exe
        prerelease: true
        draft: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Deploy appcast to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./appcast
        keep_files: false
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
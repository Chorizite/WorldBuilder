name: Build Edge
on:
  push:
    branches:
      - master
      - main
permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  build-and-release-edge:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for GitVersion and changelog

    - name: Install Dependencies
      run: |
        sudo sed -i 's/yes/no/g' /etc/initramfs-tools/update-initramfs.conf # Disable initramfs update
        sudo rm -f /var/lib/man-db/auto-update # Disable man-db update
        sudo apt update && sudo apt install -y nsis nsis-pluginapi
        dotnet tool install --global NetSparkleUpdater.Tools.AppCastGenerator
    
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '6.4.x'
    
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
      with:
        useConfigFile: true

    - name: Set version envs
      run: |
        echo "ASSEMBLY_VERSION=${{ steps.gitversion.outputs.major }}.0.0" >> $GITHUB_ENV
        echo "APP_VERSION=${{ steps.gitversion.outputs.majorMinorPatch }}+${{ steps.gitversion.outputs.commitsSinceVersionSource }}" >> $GITHUB_ENV

    - name: Build
      run: dotnet publish WorldBuilder.Desktop/WorldBuilder.Desktop.csproj -r win-x64 -p:ProductVersion=${{ env.APP_VERSION }} -p:FileVersion=${{ env.APP_VERSION }} -p:Version=${{ env.APP_VERSION }} -p:AssemblyVersion=${{ env.ASSEMBLY_VERSION }}
    
    - name: Generate Changelog
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v4
      with:
        configuration: ".github/changelog-config.json"
        toTag: ${{ github.sha }}
        commitMode: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build installer
      run: |
          makensis -DVERSION="${{ env.APP_VERSION }}" -DBUILDPATH="${{ github.workspace }}/WorldBuilder.Desktop/bin/Release/net8.0/win-x64/publish/" "${{ github.workspace }}/Installer.nsi"
    
    - name: Generate updated appcast
      run: |
        echo "${{ steps.changelog.outputs.changelog }}" > "${{ env.APP_VERSION }}.md"
        mkdir -p appcast
        cp ./WorldBuilderInstaller-${{ env.APP_VERSION }}.exe appcast/
        cd appcast
        curl -f -o appcast.xml https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/appcast.xml || true
        
        # Remove all edge channel releases from existing appcast
        if [ -f appcast.xml ]; then
          python3 ${{ github.workspace }}/.github/scripts/clean_appcast.py appcast.xml edge
        fi
        
        netsparkle-generate-appcast -b . -f true --os windows-x64 -n WorldBuilder --file-version "${{ env.APP_VERSION }}" --overwrite-old-items --reparse-existing true --human-readable true --channel edge --change-log-path ../ --base-url "https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/releases/download/latest/"
        echo "Updated appcast.xml:"
        cat appcast.xml
        rm WorldBuilderInstaller-${{ env.APP_VERSION }}.exe
        pwd
        ls -lah
      shell: bash
      env:
        SPARKLE_PRIVATE_KEY: ${{ secrets.SPARKLE_PRIVATE_KEY }}
        SPARKLE_PUBLIC_KEY: ${{ secrets.SPARKLE_PUBLIC_KEY }}
    
    - name: Delete existing 'latest' release
      run: |
        gh release delete latest --yes || true
        git push origin :refs/tags/latest || true
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create/Update Pre-release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        name: "Edge"
        body: |
          ## 🚀 Edge Build ${{ env.APP_VERSION }}
          
          This is an automated pre-release build from the latest commit.
          
          ### 📋 Changelog
          ${{ steps.changelog.outputs.changelog }}
          
          ### ⚠️ Warning
          This is a preview build and may contain bugs or incomplete features.
        files: ./WorldBuilderInstaller-${{ env.APP_VERSION }}.exe
        prerelease: true
        draft: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Deploy appcast to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./appcast
        keep_files: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
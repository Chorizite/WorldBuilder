name: Create Stable Release Draft
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for GitVersion and changelog

    - name: Install Dependencies
      run: |
        sudo sed -i 's/yes/no/g' /etc/initramfs-tools/update-initramfs.conf # Disable initramfs update
        sudo rm -f /var/lib/man-db/auto-update # Disable man-db update
        sudo apt update && sudo apt install -y nsis nsis-pluginapi
    
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '6.4.x'
    
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
      with:
        useConfigFile: true

    - name: Set version envs
      run: |
        echo "ASSEMBLY_VERSION=${{ steps.gitversion.outputs.major }}.0.0" >> $GITHUB_ENV
        echo "APP_VERSION=${{ steps.gitversion.outputs.majorMinorPatch }}" >> $GITHUB_ENV
        echo "TAG_NAME=v${{ steps.gitversion.outputs.majorMinorPatch }}" >> $GITHUB_ENV

    - name: Check if tag exists
      id: check_tag
      run: |
        if git rev-parse "${{ env.TAG_NAME }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "❌ Tag ${{ env.TAG_NAME }} already exists!"
          exit 1
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "✅ Tag ${{ env.TAG_NAME }} is available"
        fi

    - name: Build
      run: dotnet publish WorldBuilder.Desktop/WorldBuilder.Desktop.csproj -r win-x64 -p:InformationalVersion=${{ env.APP_VERSION }} -p:Version=${{ env.APP_VERSION }} -p:AssemblyVersion=${{ env.ASSEMBLY_VERSION }}
    
    - name: Generate Changelog
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v4
      with:
        configuration: ".github/changelog-config.json"
        toTag: ${{ github.sha }}
        commitMode: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build installer
      run: |
        makensis -DVERSION="${{ env.APP_VERSION }}" -DBUILDPATH="${{ github.workspace }}/WorldBuilder.Desktop/bin/Release/net8.0/win-x64/publish/" "${{ github.workspace }}/Installer.nsi"
    
    - name: Create Draft Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: "Release ${{ env.APP_VERSION }}"
        body: |
          ## 🎉 Release ${{ env.APP_VERSION }}
          
          ### 📋 Changelog
          ${{ steps.changelog.outputs.changelog }}
          
          ### 📦 Installation
          Download and run `WorldBuilderInstaller-${{ env.APP_VERSION }}.exe`
        files: ./WorldBuilderInstaller-${{ env.APP_VERSION }}.exe
        draft: true
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}